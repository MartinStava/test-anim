/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useSpring, animated } from "@react-spring/three"
import { useEffect, useState } from "react"
import { firstCharacterId, secondCharacterId } from "../config"
import { useGameStore } from "../store/store"

export const Character: React.FC<{
  characterId: string
  children: React.ReactNode
}> = (props) => {
  const [deltaX, setDeltaX] = useState(0)
  const [deltaZ, setDeltaZ] = useState(0)

  const index = useGameStore((state) => state.replay.index)
  const next = useGameStore((state) => state.next)

  useEffect(() => {
    if (
      (index === 0 && props.characterId === firstCharacterId) ||
      (index === 1 && props.characterId === secondCharacterId)
    ) {
      setDeltaX(5)
      setDeltaZ(0)
    }
  }, [index, props.characterId])

  const { x, z } = useSpring({
    from: { x: 0, z: 0 },
    to: { x: deltaX, z: deltaZ },
    config: {
      duration: 5.0 * 0.2 * 1000,
    },
    onRest() {
      next()
    },
  })

  return (
    <animated.group position-x={x} position-z={z}>
      {props.children}
    </animated.group>
  )
}
