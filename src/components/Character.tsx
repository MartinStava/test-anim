/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useSpring, animated } from "@react-spring/three"
import { useGameStore } from "../stores/game"
import { distance } from "../utils/grid"

export const Character: React.FC<{
  characterId: string
  children: React.ReactNode
}> = (props) => {
  const character = useGameStore((state) =>
    state.state.characters.find((x) => x.characterId === props.characterId)
  )

  const currentStep = useGameStore((state) => state.getCurrentStep())

  const next = useGameStore((state) => state.next)

  const from = character?.position ?? { x: 0, z: 0 }

  const to =
    currentStep?.characterId === props.characterId
      ? currentStep.destination
      : from

  const dist = distance(from.x, from.z, to.x, to.z)
  console.log(dist)

  const duration = 10 * 0.125 * 1000

  const { x, z } = useSpring({
    from,
    to: { x: to.x, z: to.z },
    config: { duration },
    onRest() {
      next()
    },
  })

  return (
    <animated.group position-x={x} position-z={z}>
      {props.children}
    </animated.group>
  )
}
