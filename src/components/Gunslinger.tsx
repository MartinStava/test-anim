/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three"
import { useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { GLTF } from "three-stdlib"
import {
  CharacterAnimationName,
  useCharacterAnimations,
} from "../hooks/use-character-animations"

type GLTFResult = GLTF & {
  nodes: {
    gunslinger: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {}
}

export const Gunslinger: React.FC<{
  animation: CharacterAnimationName
}> = (props) => {
  const group = useRef<THREE.Group>(null)

  const { nodes } = useGLTF("/gltf/gunslinger/m_skin.glb") as GLTFResult

  useCharacterAnimations("gunslinger", props.animation, group)

  return (
    <group ref={group} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="gunslinger"
            geometry={nodes.gunslinger.geometry}
            material={nodes.gunslinger.material}
            skeleton={nodes.gunslinger.skeleton}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("/gltf/gunslinger/m_skin.glb")
