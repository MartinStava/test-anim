/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import {
  useSpring,
  animated,
  useSpringRef,
  useChain,
} from "@react-spring/three"
import { useEffect, useState } from "react"
import { Gunslinger, GunslingerAnimation } from "../models/Gunslinger"

export enum Target {
  Default,
  A,
  B,
  C,
}

export const Character: React.FC<{ target: Target }> = ({ target }) => {
  const [animation, setAnimation] = useState(GunslingerAnimation.Idle)
  const [deltaZ, setDeltaZ] = useState(0)

  useEffect(() => {
    if (target === Target.Default) {
      return
    }
    start()
  }, [target])

  const start = () => {
    setAnimation(GunslingerAnimation.Run)
    setDeltaZ(10)
  }

  const pzRef = useSpringRef()
  const { pz } = useSpring({
    delay: 0.25 * 1000 * 0.5 * 0.5,
    from: { pz: 0 },
    to: { pz: deltaZ },
    config: { duration: deltaZ * 0.15 * 1000 },
    onRest() {
      setAnimation(GunslingerAnimation.Stop)
    },
    ref: pzRef,
  })

  useChain([pzRef])

  return (
    <animated.group position-z={pz}>
      {/* <Soldier animation={animation} /> */}
      <Gunslinger animation={animation} />
    </animated.group>
  )
}
